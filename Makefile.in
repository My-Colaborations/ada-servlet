## The type of library we want to build. Possible values:
##	 relocatable
##	 static
SERVLET_LIBRARY_TYPE=static

# You may edit this makefile as long as you keep these original 
# target names defined.
MODE=@MODE@
GNATMAKE=@GNATMAKE@
GNATCLEAN=gnatclean
GPRINSTALL=@GPRINSTALL@
INSTALL=@INSTALL@
DYNAMO=dynamo

GPRPATH=servlet.gpr
SERVLET_GPRPATH=servlet_core.gpr
AWS_GPRPATH=servlet_aws.gpr
SERVLET_UNIT_GPRPATH=servlet_unit.gpr

BUILDS_SHARED=@BUILDS_SHARED@

version=@SERVLET_VERSION@

distdir=ada-servlet-@SERVLET_VERSION@

DIST_FILE=ada-servlet-@SERVLET_VERSION@.tar.gz

HAVE_AWS=@SERVLET_HAVE_AWS@

LN_S=@LN_S@
MKDIR=mkdir
CP=cp
LN=ln -s

SERVLET_SERVER=@SERVLET_SERVER@

ifeq (${OS},Windows_NT)
LIBEXT=dll
LIBVER=dll
else
LIBEXT=so
LIBVER=so.$(version)
endif

srcdir = .
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
top_builddir = .

# share/ada/adainclude
infix_inc=@ADA_INC_BASE@

# share/ada/adainclude
infix_prj=@ADA_PRJ_BASE@

# lib
infix_lib=@ADA_LIB_BASE@

# lib/ada/adalib
infix_ali=@ADA_ALI_BASE@

projectdir=${prefix}/${infix_prj}
bindir=${prefix}/bin
dynamodir=${prefix}/share/dynamo

libname=libada_servlet
libprefix=$(libname)_

PROCESSORS=@NR_CPUS@
COVERAGE=@BUILDS_COVERAGE@
MAKE_ARGS=-XMODE=${MODE} -XCOVERAGE=${COVERAGE} -XSERVLET_LIBRARY_TYPE=${SERVLET_LIBRARY_TYPE} -XPROCESSORS=$(PROCESSORS)
ifeq ($(SERVLET_LIBRARY_TYPE),relocatable)
MAKE_ARGS += -XUTIL_BUILD=relocatable -XUTIL_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XEL_BUILD=relocatable -XEL_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XSECURITY_BUILD=relocatable -XSECURITY_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XXMLADA_BUILD=relocatable -XAWS_BUILD=relocatable
MAKE_ARGS += -XUTIL_HTTP_AWS_BUILD=relocatable -XUTIL_HTTP_AWS_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XUTIL_UNIT_BUILD=relocatable -XUTIL_UNIT_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XLIBRARY_TYPE=relocatable
endif

ifeq (${BUILDS_SHARED},yes)
all:	 static shared
install: uninstall install_shared install_static install-info
else
all:	 static
install: uninstall install_static install-info
endif

# Build executables for all mains defined by the project.
build: setup regtests/servlet-testsuite.adb
	$(GNATMAKE) -m -p -P "$(SERVLET_GPRPATH)" $(MAKE_ARGS)
ifeq (${HAVE_AWS},yes)
	$(GNATMAKE) -m -p -P "$(AWS_GPRPATH)" $(MAKE_ARGS)
endif
	$(GNATMAKE) -m -p -Pservlet_tests $(MAKE_ARGS)

static:
	$(MAKE) SERVLET_LIBRARY_TYPE=static build

shared:
	$(MAKE) SERVLET_LIBRARY_TYPE=relocatable build

setup: obj/servlet/static lib/servlet/static obj/servlet-aws/static lib/servlet-aws/static

obj/servlet/static lib/servlet/static obj/servlet-aws/static lib/servlet-aws/static:
	$(MKDIR) -p $@

# Build and run the unit tests
check test:	build-tests runtest

runtest:
	DIR=`pwd`; \
	export LD_LIBRARY_PATH="$$DIR/lib/servlet/relocatable:$$DIR/lib/servletunit/relocatable:$$LD_LIBRARY_PATH"; \
	export PATH="$$DIR/lib/servlet/relocatable:$$DIR/lib/servletunit/relocatable:$$PATH"; \
	bin/servlet_harness -xml servlet-aunit.xml -config test.properties

build-tests:	build
	$(GNATMAKE) -p -Pservlet_tests $(MAKE_ARGS)

regtests/servlet-testsuite.adb: regtests/servlet-testsuite.gpb Makefile
	gnatprep -DSERVLET_SERVER=$(SERVLET_SERVER) regtests/servlet-testsuite.gpb $@

# Not intended for manual invocation.
# Invoked if automatic builds are enabled.
# Analyzes only on those sources that have changed.
# Does not build executables.
autobuild:
	$(GNATMAKE) $(MAKE_ARGS) -gnatc -c -k  -P "$(GPRPATH)"

# Clean the root project of all build products.
clean:	clean_test
	-rm -rf lib obj bin

# Clean the files produced by the unit tests
clean_test:
	rm -rf regtests/result/*

# Clean root project and all imported projects too.
clean_tree:
	$(GNATCLEAN) -q -P "$(GPRPATH)" -r

# Check *all* sources for errors, even those not changed.
# Does not build executables.
analyze:
	$(GNATMAKE) $(MAKE_ARGS) -f	 -gnatc -c -k  -P "$(GPRPATH)"

# Clean, then build executables for all mains defined by the project.
rebuild: clean build

# Build the coverage data and make a report using lcov and genhtml
coverage:  coverage-init runtest coverage-capture coverage-report

COVERAGE_OPTIONS= \
		 --directory src --directory servletunit --directory regtests \
		 --directory obj --directory obj/servlet/static --directory obj/servletunit/static

coverage-init:
	lcov --no-external --initial --capture $(COVERAGE_OPTIONS) \
		 --output-file servlet-coverage.info

coverage-capture:
	lcov --no-external --capture $(COVERAGE_OPTIONS) \
		 --output-file servlet-coverage.info
	lcov --remove servlet-coverage.info '*.ads' -o servlet-coverage-body.info

coverage-report:
	mkdir -p cov
	genhtml --ignore-errors source servlet-coverage-body.info --legend --title "Ada Server Faces" \
			--output-directory cov

doc:
	$(DYNAMO) build-doc -markdown wiki

dist:
	git archive -o $(DIST_FILE) --prefix=$(distdir)/ HEAD

install_static:
	$(MAKE) SERVLET_LIBRARY_TYPE=static install_lib

install_shared:
	$(MAKE) SERVLET_LIBRARY_TYPE=relocatable install_lib

install_lib:
	$(GPRINSTALL) -p -f --prefix=${prefix} \
		$(MAKE_ARGS) \
		--build-name=$(SERVLET_LIBRARY_TYPE) $(GPRPATH)
	$(GPRINSTALL) -p -f --prefix=${prefix} \
		$(MAKE_ARGS) \
		--build-name=$(SERVLET_LIBRARY_TYPE) $(SERVLET_GPRPATH)
	$(GPRINSTALL) -p -f --prefix=${prefix} \
		$(MAKE_ARGS) \
		--build-name=$(SERVLET_LIBRARY_TYPE) $(SERVLET_UNIT_GPRPATH)
ifeq (${HAVE_AWS},yes)
	$(GPRINSTALL) -p -f --prefix=${prefix} \
		$(MAKE_ARGS) \
		--build-name=$(SERVLET_LIBRARY_TYPE) $(AWS_GPRPATH)
endif

install-info:
	@echo "Environment setup:"
	@echo "	 export ADA_PROJECT_PATH=${projectdir}:$$ADA_PROJECT_PATH"

uninstall:
	-$(GPRINSTALL) -q -f --prefix=${prefix} $(MAKE_ARGS) --uninstall $(GPRPATH)
	-$(GPRINSTALL) -q -f --prefix=${prefix} $(MAKE_ARGS) --uninstall $(SERVLET_GPRPATH)
	-$(GPRINSTALL) -q -f --prefix=${prefix} $(MAKE_ARGS) --uninstall $(SERVLET_UNIT_GPRPATH)
ifeq (${HAVE_AWS},yes)
	-$(GPRINSTALL) -q -f --prefix=${prefix} $(MAKE_ARGS) --uninstall $(AWS_GPRPATH)
endif
